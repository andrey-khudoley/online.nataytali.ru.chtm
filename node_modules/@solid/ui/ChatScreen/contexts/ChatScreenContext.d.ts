import { SetStoreFunction } from '@app/solid-js/store';
import { Message } from '../components/Messages';
export declare const ChatScreenContext: import("@app/solid-js").Context<[ChatScreenStore, SetStoreFunction<ChatScreenStore>]>;
export declare const ChatScreenContextProvider: (props: import("@app/solid-js").FlowProps<{
    value: [ChatScreenStore, SetStoreFunction<ChatScreenStore>];
}, import("@app/solid-js").JSX.Element>) => import("@app/solid-js").JSX.Element;
export declare function useChatScreenContext(): [ChatScreenStore, SetStoreFunction<ChatScreenStore>];
export interface ChatScreenStore {
    chat: ChatiumJsonChatScreen;
    messages: Message[];
    lastChangeId: string | null;
    lastReadAt: number | null;
    socketStore: any;
}
export interface ChatiumJsonChatScreen {
    title?: string;
    description?: string;
    chat?: {
        messages_get_url?: string;
        messages_add_url?: string;
        messages_edit_url?: string;
        messages_delete_url?: string;
        messages_changes_url?: string;
        messages_react_url?: string;
        on_context_api_call_url?: string;
        mark_as_read_url?: string;
        last_read_get_url?: string;
        support_paging?: boolean;
        files_put_url?: string;
        reply_quotes_enabled?: boolean;
        current_author?: ChatiumJsonChatScreenAuthor;
        group_author?: ChatiumJsonChatScreenAuthor | null;
        messages_socket_id?: string;
        reactions_socket_id?: string;
        last_read_at?: number;
        last_read_socket_id?: string;
        last_message_id?: string;
        last_read_message_id?: string;
        typing_socket_data?: {
            id?: string;
            name?: string;
            uid?: string;
        };
        pinned?: {
            update_url?: string;
        };
        render_inverted?: boolean;
    };
}
interface ChatiumJsonChatScreenAuthor {
    id: string;
    name: string;
    avatar?: {
        image?: string;
    };
    onClick?: {
        type: string;
        url: string;
    } | null;
}
export {};
