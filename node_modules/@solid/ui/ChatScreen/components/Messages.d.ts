import { jsx } from '@app/solid-js';
export declare const Messages: (props: MessagesProps) => jsx.JSX.Element;
export declare const Message: (props: MessageProps) => jsx.JSX.Element;
export declare const ReplyMessage: (props: MessageProps) => jsx.JSX.Element;
export declare const MessageFile: (props: MessageFileProps) => jsx.JSX.Element;
export declare const MessageFileImage: (props: MessageFileProps) => jsx.JSX.Element;
export declare const MessageFileVideoNote: (props: MessageFileProps) => jsx.JSX.Element;
export declare const MessageFileVideo: (props: MessageFileProps) => jsx.JSX.Element;
export declare const MessageFileAudio: (props: MessageFileProps) => jsx.JSX.Element;
export declare const MessageFileUnknown: (props: MessageFileProps) => jsx.JSX.Element;
interface MessagesProps {
    messages: Message[];
    onReplyMessage?: (message: Message) => void;
}
interface MessageProps {
    message: Message;
    onClick?: (event: MouseEvent) => void;
    onDblClick?: (event: MouseEvent) => void;
}
interface MessageFileProps {
    file: MessageFile;
}
export interface Message {
    id: string;
    isOutgoing: boolean;
    type: string;
    text: string;
    textTokens: (string | {
        type: 'url';
        v: string;
    })[];
    files: MessageFile[];
    blocks: any[];
    canEdit: boolean;
    bgColor: string | null;
    createdAt: number;
    createdAtTimestamp: number;
    updatedAt: number;
    updatedAtTimestamp: number;
    author: {
        id: string;
        name: string;
        avatar?: {
            image: string;
        };
        onClick?: {
            type: 'navigate';
            url: 'https://refunnels.getcourse.ru/chtm/app/users/~m9LzBJXQ0kLzUPa7fQ3073476';
        };
    };
    replyTo: Message | null;
    reactions: null | Record<string, {
        user_id: string;
    }[]>;
    sticker: null;
    isSameAuthor: boolean;
    isSameDay: boolean;
    sending?: boolean;
}
export interface MessageFile {
    mime_type?: string;
    hash?: string;
    url?: string;
    thumbnail_url_400?: string;
    meta?: {
        size?: number;
        width?: number;
        height?: number;
        type?: string;
        name?: string;
        duration?: number;
    };
}
export {};
