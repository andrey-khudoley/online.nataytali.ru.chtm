import { AudioBlock, ImageBlock, VideoBlock } from 'lib/chatium-json/v2'

declare type HashMediaType = 'file' | 'video' | 'image' | 'audio'
export interface FileClass {
  new (hash: string | StorageFile): StorageFile
}
export interface StorageFile {
  hash: string
  type: HashMediaType
  downloadUrl: string
  originalUrl: string
  toJSON(): string
}
export interface StorageFileWithSizes extends StorageFile {
  width: number
  widthMaybe: number | undefined
  height: number
  heightMaybe: number | undefined
  sizes: {
    width: number
    height: number
  }
  sizesMaybe:
    | {
        width: number
        height: number
      }
    | undefined
}
export interface ImageFileClass {
  new (hash: string | StorageFile): StorageImageFile
}
export interface StorageImageFile extends StorageFileWithSizes {
  getThumbnailUrl(width?: number, height?: number): string
  getThumbnailSrc(width?: number, height?: number): ImageBlock['src']
}
export interface VideoFileClass {
  new (hash: string | StorageFile): StorageVideoFile
}
export interface StorageVideoFile extends StorageFileWithSizes {
  duration: number
  durationMaybe: number | undefined
  videoSrc: Promise<VideoBlock['src']>
  status: Promise<'done' | 'processing' | 'error'>
  progress: Promise<number>
  getThumbnailUrl(width?: number, height?: number, offsetSeconds?: 'auto' | number): string
  getThumbnailSrc(width?: number, height?: number, offsetSeconds?: 'auto' | number): ImageBlock['src']
}
export interface AudioFileClass {
  new (hash: string | StorageFile): StorageAudioFile
}
export interface StorageAudioFile extends StorageFile {
  duration: number
  durationMaybe: number | undefined
  audioSrc: AudioBlock['src']
}

export {}
