export declare function validate(ctx: app.Ctx, data: Record<string, unknown>, rules: ValidateRules, options?: ValidateOptions): Promise<void>;
export declare namespace validate {
    var field: (ctx: app.Ctx, field: string, value: unknown, rules: ValidateRule | ValidateRule[]) => Promise<string | null>;
    var required: (ctx: app.Ctx, field: string, value: unknown, options: string | null, message: string | null) => Promise<string | null>;
    var minlen: (ctx: app.Ctx, field: string, value: unknown, options: string | null, message: string | null) => Promise<string | null>;
    var maxlen: (ctx: app.Ctx, field: string, value: unknown, options: string | null, message: string | null) => Promise<string | null>;
    var min: (ctx: app.Ctx, field: string, value: unknown, options: string | null, message: string | null) => Promise<string | null>;
    var max: (ctx: app.Ctx, field: string, value: unknown, options: string | null, message: string | null) => Promise<string | null>;
    var message: (message: string | null, defaultMessage: string) => string;
}
export type ValidateRules = Record<string, ValidateRule | ValidateRule[]>;
export type ValidateRuleType = 'required' | `minlen:${number}` | `maxlen:${number}` | `min:${number}` | `max:${number}`;
export type ValidateRuleFunction = ((ctx: app.Ctx, field: string, value: unknown) => Promise<string | null>) | ((ctx: app.Ctx, field: string, value: unknown) => string | null);
export type ValidateRule = `${ValidateRuleType}` | `${ValidateRuleType}|${string}` | ValidateRuleFunction;
export type ValidateOptions = {
    message?: string;
};
