import { jsx } from '@app/html-jsx';
export declare function TagSelector(props: TagSelectorProps): jsx.JSX.Element;
export declare function TagSelectorTag(props: TagSelectorTagProps, ...children: unknown[]): jsx.JSX.Element;
export declare const TagSelectorInitializer: {
    (props: TagSelectorProps & {
        ref: string;
        ctx: import("@app/html-jsx").InitializerCtx;
    }): jsx.JSX.Element;
    initializer: (props: Omit<TagSelectorProps, "element" | "ctx"> & {
        element: HTMLDivElement;
        ctx: {
            t: RichUgcCtx["t"];
            user: RichUgcCtx["user"];
            account: {
                url(path: string): string;
            };
            location: RichUgcCtx["location"];
        };
    }) => void;
};
type TagSelectorProps = {
    ctx: jsx.Ctx;
    tags: Tag[];
    placeholder?: string;
    formId?: string;
    name?: string;
    class?: string;
    readonly?: boolean;
    canCreate?: boolean;
    suggestions?: Tag[] | string;
};
interface TagSelectorTagProps {
    ctx: jsx.Ctx;
    tag: Tag;
}
interface Tag {
    id?: string;
    title?: string;
}
export {};
